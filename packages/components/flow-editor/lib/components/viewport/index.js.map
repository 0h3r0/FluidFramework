{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/components/viewport/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Dom, Template } from \"@prague/flow-util\";\r\nimport { IViewState, View } from \"..\";\r\nimport { debug } from \"../../debug\";\r\nimport * as styles from \"./index.css\";\r\n\r\nconst template = new Template({\r\n    tag: \"div\",\r\n    props: { className: styles.viewport },\r\n    children: [\r\n        { tag: \"div\", props: { className: styles.ref }, children: [\r\n            { tag: \"div\", ref: \"transform\", props: { className: styles.transform }, children: [\r\n                { tag: \"div\", props: { className: styles.document }, children: [\r\n                    { tag: \"div\", ref: \"slot\", props: { className: styles.slot }},\r\n                ]},\r\n            ]},\r\n            { tag: \"div\", props: { className: `${styles.slot} ${styles.position}` }, children: [\r\n                { tag: \"div\", props: { className: `${styles.document} ${styles.position}` }, children: [\r\n                    { tag: \"div\", ref: \"origin\", props: { className: styles.origin }},\r\n                ]},\r\n            ]},\r\n        ]},\r\n        {\r\n            tag: \"div\",\r\n            ref: \"scrollPane\",\r\n            props: { className: styles.scrollPane },\r\n            children: [\r\n                { tag: \"div\", ref: \"space\", props: { className: styles.space }},\r\n            ],\r\n        },\r\n    ],\r\n});\r\n\r\nexport interface IViewportProps {\r\n    slot: Element;\r\n    sizeY: number;\r\n    offsetY: number;\r\n    onScroll: (position: number) => void;\r\n}\r\n\r\nexport interface IViewportViewState extends IViewState {\r\n    props: IViewportProps;\r\n    root: Element;\r\n    transform: HTMLElement;\r\n    slot: HTMLElement;\r\n    origin: HTMLElement;\r\n    space: HTMLElement;\r\n    scrollPane: HTMLElement;\r\n    sizeY: number;\r\n    offsetY: number;\r\n}\r\n\r\nexport class ViewportView extends View<IViewportProps, IViewportViewState> {\r\n\r\n    public get slotOriginTop() {\r\n        return this.state.origin.getBoundingClientRect().top;\r\n    }\r\n    public static readonly factory = () => new ViewportView();\r\n\r\n    public mounting(props: Readonly<IViewportProps>): IViewportViewState {\r\n        const root = template.clone();\r\n        const slot = template.get(root, \"slot\") as HTMLElement;\r\n        const transform = template.get(root, \"transform\") as HTMLElement;\r\n        const origin = template.get(root, \"origin\") as HTMLElement;\r\n        const scrollPane = template.get(root, \"scrollPane\") as HTMLElement;\r\n        const space = template.get(root, \"space\") as HTMLElement;\r\n\r\n        scrollPane.addEventListener(\"scroll\", this.onScroll);\r\n\r\n        // TypeScript 3.2.2 'lib.dom.d.ts' does not type \"wheel\" event as WheelEvent.\r\n        const onWheel = ((e: WheelEvent) => {\r\n            const delta = e.deltaY;\r\n            scrollPane.scrollTop += delta;\r\n        }) as EventListener;\r\n\r\n        root.addEventListener(\"wheel\", onWheel);\r\n\r\n        return this.updating(props, {\r\n            props,\r\n            root,\r\n            slot,\r\n            transform,\r\n            origin,\r\n            scrollPane,\r\n            space,\r\n            offsetY: 0,\r\n            sizeY: props.sizeY,\r\n        });\r\n    }\r\n\r\n    public updating(props: Readonly<IViewportProps>, state: Readonly<IViewportViewState>): IViewportViewState {\r\n        Dom.ensureFirstChild(state.slot, props.slot);\r\n        state.space.style.height = `${props.sizeY}px`;\r\n        debug(`  offset: ${props.offsetY}`);\r\n        state.transform.style.top = `${props.offsetY}px`;\r\n        return state;\r\n    }\r\n\r\n    public unmounting(state: Readonly<IViewportViewState>) {\r\n        state.root.removeEventListener(\"scroll\", this.onScroll);\r\n    }\r\n\r\n    private readonly onScroll = () => {\r\n        const state = this.state;\r\n        state.props.onScroll(state.scrollPane.scrollTop);\r\n    }\r\n}\r\n"]}