{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/components/editor/index.ts"],"names":[],"mappings":"AAEA,OAAO,EAAc,IAAI,EAAE,MAAM,IAAI,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,YAAY,EAAkB,MAAM,aAAa,CAAC;AAC3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AACjD,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAqBlC,MAAM,OAAO,MAAO,SAAQ,IAAoC;IAQ5D;QACI,KAAK,EAAE,CAAC;QAsEK,WAAM,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC,CAAA;QA4CgB,cAAS,GAAG,CAAC,EAAiB,EAAE,EAAE;YAC/C,MAAM,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;YAC3B,QAAQ,OAAO,EAAE;gBACb,wFAAwF;gBACxF,sBAAsB,CAAC,CAAC;oBACpB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACnB,EAAE,CAAC,eAAe,EAAE,CAAC;oBACrB,MAAM;iBACT;gBACD,oBAAmB,CAAC,CAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAClB,EAAE,CAAC,eAAe,EAAE,CAAC;oBACrB,MAAM;iBACT;gBACD,uBAAsB,CAAC,CAAC;oBACpB,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM;iBACT;gBACD,wBAAuB,CAAC,CAAC;oBACrB,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM;iBACT;gBACD,uBAAsB,CAAC,CAAC;oBACpB,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBACrD,MAAM;iBACT;gBACD,qBAAoB,CAAC,CAAC;oBAClB,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBACrD,MAAM;iBACT;gBACD,OAAO,CAAC,CAAC;oBACL,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC;iBAC3C;aACJ;QACL,CAAC,CAAA;QAEgB,eAAU,GAAG,CAAC,EAAiB,EAAE,EAAE;YAChD,QAAQ,EAAE,CAAC,OAAO,EAAE;gBAChB,sBAAsB,CAAC,CAAC;oBACpB,gGAAgG;oBAChG,MAAM;iBACT;gBACD,mBAAkB,CAAC,CAAC;oBAChB,IAAI,EAAE,CAAC,QAAQ,EAAE;wBACb,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;qBAClD;yBAAM;wBACH,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;qBAClD;oBACD,EAAE,CAAC,eAAe,EAAE,CAAC;oBACrB,MAAM;iBACT;gBACD,OAAO,CAAC,CAAC;oBACL,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;oBACxB,EAAE,CAAC,eAAe,EAAE,CAAC;oBACrB,EAAE,CAAC,cAAc,EAAE,CAAC;iBACvB;aACJ;QACL,CAAC,CAAA;QAEgB,gBAAW,GAAG,CAAC,EAAc,EAAE,EAAE;YAC9C,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,qBAAqB,EAAE;gBACvB,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,qBAAqB,CAAC;gBAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CACrB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,MAAM,EACtC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,EAAE,CAAC,eAAe,EAAE,CAAC;aACxB;QACL,CAAC,CAAA;QA1LG,kGAAkG;QAClG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;IAClC,CAAC;IAXD,IAAY,MAAM,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1D,IAAY,GAAG,KAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7D,IAAY,KAAK,KAAc,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACzD,IAAY,cAAc,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAUzD,QAAQ,CAAC,KAA6B;QAC5C,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAElD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAExB,MAAM,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QACnC,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEzC,MAAM,SAAS,GAA4B,EAAE,CAAC;QAC9C,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC;QAC1C,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,EAAK,QAAQ,EAAK,IAAI,CAAC,UAAU,CAAC,CAAC;QAE5D,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACxB,IAAI;YACJ,SAAS;YACT,OAAO;YACP,SAAS;YACT,KAAK;YACL,MAAM;SACT,CAAC,CAAC;IACP,CAAC;IAES,QAAQ,CAAC,KAA6B,EAAE,KAAuB;QACrE,0DAA0D;QAC1D,IAAI,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAChC;QAED,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAE5B,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,UAAU,CAAC,KAAuB;QACxC,KAAK,MAAM,QAAQ,IAAI,KAAK,CAAC,SAAS,EAAE;YACpC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACzE;QAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAEO,EAAE,CAAsC,SAAkC,EAAE,MAAmB,EAAE,IAAgB,EAAE,QAA6C;QACpK,MAAM,eAAe,GAAG,CAAC,CAAQ,EAAE,EAAE;YACjC,+CAA+C;YAC/C,IAAI,iBAAiB,CAAC,CAAC,CAAC,EAAE;gBACtB,OAAO;aACV;YAED,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QAC/C,SAAS,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,CAAC;IAChE,CAAC;IAQO,MAAM,CAAC,UAAkB,EAAE,QAAgB;QAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;QACzC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAEjC,IAAI,KAAK,KAAK,GAAG,EAAE;YACf,8EAA8E;YAC9E,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,EAAE,GAAG,GAAG,QAAQ,CAAC,CAAC;SACvD;aAAM;YACH,wCAAwC;YACxC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;SAC/D;IACL,CAAC;IAEO,UAAU,CAAC,IAAY;QAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;QACzC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACjC,IAAI,KAAK,KAAK,GAAG,EAAE;YACf,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAClC;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;SAC9E;IACL,CAAC;IAEO,eAAe,CAAC,EAAiB,EAAE,MAAc;QACrD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,EAAE,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEO,aAAa,CAAC,EAAiB,EAAE,QAAsG;QAC3I,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACxC,IAAI,YAAY,EAAE;YACd,MAAM,gBAAgB,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;YAC5F,IAAI,gBAAgB,EAAE;gBAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;gBAChE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,GAAG,gBAAgB,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;gBACpE,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,EAAE,CAAC,eAAe,EAAE,CAAC;aACxB;SACJ;IACL,CAAC;CAyEJ","sourcesContent":["import { KeyCode, Scheduler } from \"@prague/flow-util\";\r\nimport { ISegment } from \"@prague/merge-tree\";\r\nimport { IViewState, View } from \"..\";\r\nimport { debug } from \"../../debug\";\r\nimport { DocumentView, IDocumentProps } from \"../document\";\r\nimport { shouldIgnoreEvent } from \"../inclusion\";\r\nimport { Cursor } from \"./cursor\";\r\n\r\nexport interface IEditorProps extends IDocumentProps {\r\n    scheduler: Scheduler;\r\n    eventSink?: HTMLElement;\r\n}\r\n\r\ninterface IListenerRegistration {\r\n    target: EventTarget;\r\n    type: string;\r\n    listener: EventListener;\r\n}\r\n\r\ninterface IEditorViewState extends IViewState {\r\n    cursor: Cursor;\r\n    docView: DocumentView;\r\n    eventSink: Element;\r\n    props: IEditorProps;\r\n    listeners: IListenerRegistration[];\r\n}\r\n\r\nexport class Editor extends View<IEditorProps, IEditorViewState> {\r\n\r\n    private get cursor()         { return this.state.cursor; }\r\n    public  get doc()            { return this.state.props.doc; }\r\n    private get props()          { return this.state.props; }\r\n    public  get cursorPosition() { return this.state.cursor.position; }\r\n    public invalidate: () => void;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // TODO: Kludge: We temporarily assign invalidate -> render until we get our scheduler in mount().\r\n        this.invalidate = this.render;\r\n    }\r\n\r\n    protected mounting(props: Readonly<IEditorProps>): IEditorViewState {\r\n        const scheduler = props.scheduler;\r\n        this.invalidate = scheduler.coalesce(this.render);\r\n\r\n        const cursor = new Cursor(props.doc);\r\n        cursor.moveTo(0, false);\r\n\r\n        const docView = new DocumentView();\r\n        const root = docView.mount(props);\r\n        docView.overlay.appendChild(cursor.root);\r\n\r\n        const listeners: IListenerRegistration[] = [];\r\n        const eventSink = props.eventSink || root;\r\n        this.on(listeners, eventSink, \"keydown\",   this.onKeyDown);\r\n        this.on(listeners, eventSink, \"keypress\",  this.onKeyPress);\r\n        this.on(listeners, eventSink, \"mousedown\", this.onMouseDown);\r\n        this.on(listeners, window,    \"resize\",    this.invalidate);\r\n\r\n        props.doc.on(\"op\", this.invalidate);\r\n\r\n        return this.updating(props, {\r\n            root,\r\n            listeners,\r\n            docView,\r\n            eventSink,\r\n            props,\r\n            cursor,\r\n        });\r\n    }\r\n\r\n    protected updating(props: Readonly<IEditorProps>, state: IEditorViewState): IEditorViewState {\r\n        // If the document has changed, remount the document view.\r\n        if (props.doc !== state.props.doc) {\r\n            this.unmounting(state);\r\n            state = this.mounting(props);\r\n        }\r\n\r\n        state.docView.update(props);\r\n\r\n        return state;\r\n    }\r\n\r\n    protected unmounting(state: IEditorViewState): void {\r\n        for (const listener of state.listeners) {\r\n            listener.target.removeEventListener(listener.type, listener.listener);\r\n        }\r\n\r\n        this.doc.off(\"op\", this.invalidate);\r\n    }\r\n\r\n    private on<K extends keyof HTMLElementEventMap>(listeners: IListenerRegistration[], target: EventTarget, type: K | string, listener: (ev: HTMLElementEventMap[K]) => any) {\r\n        const wrappedListener = (e: Event) => {\r\n            // Ignore events that bubble up from inclusions\r\n            if (shouldIgnoreEvent(e)) {\r\n                return;\r\n            }\r\n\r\n            listener(e);\r\n        };\r\n\r\n        target.addEventListener(type, wrappedListener);\r\n        listeners.push({ target, type, listener: wrappedListener });\r\n    }\r\n\r\n    private readonly render = () => {\r\n        this.props.trackedPositions = this.cursor.getTracked();\r\n        this.state.docView.update(this.props);\r\n        this.cursor.render();\r\n    }\r\n\r\n    private delete(deltaStart: number, deltaEnd: number) {\r\n        const start = this.cursor.selectionStart;\r\n        const end = this.cursor.position;\r\n\r\n        if (start === end) {\r\n            // If no range is currently selected, delete the preceding character (if any).\r\n            this.doc.remove(start + deltaStart, end + deltaEnd);\r\n        } else {\r\n            // Otherwise, delete the selected range.\r\n            this.doc.remove(Math.min(start, end), Math.max(start, end));\r\n        }\r\n    }\r\n\r\n    private insertText(text: string) {\r\n        const start = this.cursor.selectionStart;\r\n        const end = this.cursor.position;\r\n        if (start === end) {\r\n            this.doc.insertText(end, text);\r\n        } else {\r\n            this.doc.replaceWithText(Math.min(start, end), Math.max(start, end), text);\r\n        }\r\n    }\r\n\r\n    private horizontalArrow(ev: KeyboardEvent, deltaX: number) {\r\n        this.cursor.moveBy(deltaX, ev.shiftKey);\r\n        this.invalidate();\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    private verticalArrow(ev: KeyboardEvent, searchFn: (x: number, top: number, bottom: number) => { segment: ISegment, offset: number} | undefined) {\r\n        const cursorBounds = this.cursor.bounds;\r\n        if (cursorBounds) {\r\n            const segmentAndOffset = searchFn(cursorBounds.left, cursorBounds.top, cursorBounds.bottom);\r\n            if (segmentAndOffset) {\r\n                const position = this.doc.getPosition(segmentAndOffset.segment);\r\n                this.cursor.moveTo(position + segmentAndOffset.offset, ev.shiftKey);\r\n                this.invalidate();\r\n                ev.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n\r\n    private readonly onKeyDown = (ev: KeyboardEvent) => {\r\n        const keyCode = ev.keyCode;\r\n        switch (keyCode) {\r\n            // Note: Chrome 69 delivers backspace on 'keydown' only (i.e., 'keypress' is not fired.)\r\n            case KeyCode.Backspace: {\r\n                this.delete(-1, 0);\r\n                ev.stopPropagation();\r\n                break;\r\n            }\r\n            case KeyCode.Delete: {\r\n                this.delete(0, 1);\r\n                ev.stopPropagation();\r\n                break;\r\n            }\r\n            case KeyCode.LeftArrow: {\r\n                this.horizontalArrow(ev, -1);\r\n                break;\r\n            }\r\n            case KeyCode.RightArrow: {\r\n                this.horizontalArrow(ev, +1);\r\n                break;\r\n            }\r\n            case KeyCode.DownArrow: {\r\n                this.verticalArrow(ev, this.state.docView.findBelow);\r\n                break;\r\n            }\r\n            case KeyCode.UpArrow: {\r\n                this.verticalArrow(ev, this.state.docView.findAbove);\r\n                break;\r\n            }\r\n            default: {\r\n                debug(`Key: ${ev.key} (${ev.keyCode})`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private readonly onKeyPress = (ev: KeyboardEvent) => {\r\n        switch (ev.keyCode) {\r\n            case KeyCode.Backspace: {\r\n                // Note: Backspace handled on 'keydown' event to support Chrome 69 (see comment in 'onKeyDown').\r\n                break;\r\n            }\r\n            case KeyCode.Enter: {\r\n                if (ev.shiftKey) {\r\n                    this.doc.insertLineBreak(this.cursor.position);\r\n                } else {\r\n                    this.doc.insertParagraph(this.cursor.position);\r\n                }\r\n                ev.stopPropagation();\r\n                break;\r\n            }\r\n            default: {\r\n                this.insertText(ev.key);\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    private readonly onMouseDown = (ev: MouseEvent) => {\r\n        const maybeSegmentAndOffset = this.state.docView.hitTest(ev.x, ev.y);\r\n        if (maybeSegmentAndOffset) {\r\n            const { segment, offset } = maybeSegmentAndOffset;\r\n            const position = Math.min(\r\n                this.doc.getPosition(segment) + offset,\r\n                this.doc.length - 1);\r\n            this.cursor.moveTo(position, false);\r\n            this.invalidate();\r\n            ev.stopPropagation();\r\n        }\r\n    }\r\n}\r\n"]}