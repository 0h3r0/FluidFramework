{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/components/index.ts"],"names":[],"mappings":"AAYA,MAAM,OAAgB,IAAI;IAItB,IAAc,KAAK,KAAuB,OAAO,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;IAEzD,KAAK,CAAC,KAAuB;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAC5B,CAAC;IAEM,MAAM,CAAC,KAAuB;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IAC5B,CAAC;IAED,IAAW,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;CAKhD;AAUD,MAAM,OAAgB,iBAClB,SAAQ,IAAoB;IAE5B,IAAW,YAAY,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;CAChE","sourcesContent":["export interface IViewState {\r\n    readonly root: Element;\r\n}\r\n\r\nexport interface IView<TProps> {\r\n\r\n    readonly root: Element;\r\n    mount(props: Readonly<TProps>): Element;\r\n    update(props: Readonly<TProps>): void;\r\n    unmount(): void;\r\n}\r\n\r\nexport abstract class View<TProps, TState extends IViewState> implements IView<TProps> {\r\n    // tslint:disable-next-line:variable-name\r\n    private _state?: TState;\r\n\r\n    protected get state(): Readonly<TState> { return this._state!; }\r\n\r\n    public mount(props: Readonly<TProps>) {\r\n        this._state = this.mounting(props);\r\n        return this._state.root;\r\n    }\r\n\r\n    public update(props: Readonly<TProps>) {\r\n        this._state = this.updating(props, this.state);\r\n    }\r\n\r\n    public unmount() {\r\n        this.unmounting(this.state);\r\n        this.root.remove();\r\n        this._state = undefined;\r\n    }\r\n\r\n    public get root() { return this.state.root; }\r\n\r\n    protected abstract mounting(props: Readonly<TProps>): TState;\r\n    protected abstract updating(props: Readonly<TProps>, state: TState): TState;\r\n    protected abstract unmounting(state: TState): void;\r\n}\r\n\r\nexport interface IFlowViewComponentState extends IViewState {\r\n    cursorTarget: Node;\r\n}\r\n\r\nexport interface IFlowViewComponent<TProps> extends IView<TProps> {\r\n    readonly cursorTarget: Node;\r\n}\r\n\r\nexport abstract class FlowViewComponent<TProps, TState extends IFlowViewComponentState>\r\n    extends View<TProps, TState>\r\n    implements IFlowViewComponent<TProps> {\r\n    public get cursorTarget() { return this.state.cursorTarget; }\r\n}\r\n"]}