{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/components/paragraph/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,iBAAiB,EAA2B,MAAM,IAAI,CAAC;AAChE,OAAO,KAAK,MAAM,MAAM,aAAa,CAAC;AAEtC,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC;IAC1B,GAAG,EAAE,MAAM;IACX,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE;IACtC,QAAQ,EAAE;QACN,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,cAAc,EAAE,WAAW,EAAE,QAAQ,EAAE,EAAC;QACvG,EAAE,GAAG,EAAE,GAAG,EAAE;KACf;CACJ,CAAC,CAAC;AAOH,MAAM,OAAO,aAAc,SAAQ,iBAAuD;IAG/E,QAAQ,CAAC,KAAgC;QAC5C,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC9B,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QAExD,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;IAClC,CAAC;IAEM,QAAQ,CAAC,KAAgC,EAAE,KAAoC;QAClF,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,UAAU,CAAC,KAAoC,IAAqB,CAAC;;AAbrD,qBAAO,GAAG,GAAG,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import { Template } from \"@prague/flow-util\";\r\nimport { FlowViewComponent, IFlowViewComponentState } from \"..\";\r\nimport * as styles from \"./index.css\";\r\n\r\nconst template = new Template({\r\n    tag: \"span\",\r\n    props: { className: styles.paragraph },\r\n    children: [\r\n        { tag: \"span\", ref: \"cursorTarget\", props: { className: styles.afterParagraph, textContent: \"\\u200b\" }},\r\n        { tag: \"p\" },\r\n    ],\r\n});\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IParagraphProps {}\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface IParagraphViewState extends IFlowViewComponentState {}\r\n\r\nexport class ParagraphView extends FlowViewComponent<IParagraphProps, IParagraphViewState> {\r\n    public static readonly factory = () => new ParagraphView();\r\n\r\n    public mounting(props: Readonly<IParagraphProps>): IParagraphViewState {\r\n        const root = template.clone();\r\n        const cursorTarget = template.get(root, \"cursorTarget\");\r\n\r\n        return { root, cursorTarget };\r\n    }\r\n\r\n    public updating(props: Readonly<IParagraphProps>, state: Readonly<IParagraphViewState>): IParagraphViewState {\r\n        return state;\r\n    }\r\n\r\n    public unmounting(state: Readonly<IParagraphViewState>) { /* do nothing */ }\r\n}\r\n"]}