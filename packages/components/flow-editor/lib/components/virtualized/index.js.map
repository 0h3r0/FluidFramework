{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/components/virtualized/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Template } from \"@prague/flow-util\";\r\nimport { IViewState, View } from \"..\";\r\nimport { debug } from \"../../debug\";\r\nimport { Paginator } from \"../document/paginator\";\r\nimport { Editor, IEditorProps } from \"../editor\";\r\nimport { IViewportProps, ViewportView } from \"../viewport\";\r\nimport * as styles from \"./index.css\";\r\n\r\nexport interface IVirtualizedProps extends IEditorProps {\r\n    virtualize: boolean;\r\n}\r\n\r\ninterface IVirtualizedViewState extends IViewState {\r\n    props: IVirtualizedProps;\r\n    paginator: Paginator;\r\n    docView: Editor;\r\n    viewport: ViewportView;\r\n    virtualized: boolean;\r\n    offsetY: number;\r\n}\r\n\r\nexport class VirtualizedView extends View<IVirtualizedProps, IVirtualizedViewState> {\r\n\r\n    public get cursorPosition() { return this.state.docView.cursorPosition; }\r\n\r\n    public static readonly factory = () => new VirtualizedView();\r\n    private readonly template = new Template({ tag: \"div\", props: { tabIndex: 0, className: styles.virtualized }});\r\n\r\n    public mounting(props: Readonly<IVirtualizedProps>): IVirtualizedViewState {\r\n        const root = this.template.clone();\r\n        Object.assign(props, { eventSink: root });\r\n        const docView = new Editor();\r\n        docView.mount(props);\r\n\r\n        const viewport = new ViewportView();\r\n        const paginator = new Paginator(props.doc);\r\n        paginator.startPosition = 0;\r\n\r\n        const state = {\r\n            props,\r\n            root,\r\n            docView,\r\n            viewport,\r\n            virtualized: !props.virtualize,\r\n            paginator,\r\n            offsetY: 0,\r\n        };\r\n        this.ensureVirtualizationMode(props, state, /* isMounting */ true);\r\n\r\n        // Note: We set 'virtualized' to the opposite of the requested state to force 'updating()' to\r\n        //       make the necessary DOM changes for mount().\r\n        return this.updating(props, state);\r\n    }\r\n\r\n    public updating(props: Readonly<IVirtualizedProps>, state: Readonly<IVirtualizedViewState>): IVirtualizedViewState {\r\n        this.ensureVirtualizationMode(props, state, /* isMounting */ false);\r\n\r\n        if (props.virtualize) {\r\n            // Reset viewport scroll to 0\r\n            Object.assign(state, { offsetY: 0 });\r\n            state.viewport.update(this.getViewportProps(state));\r\n            state.docView.update(state.props);\r\n\r\n            const dy = state.paginator.deltaY;\r\n            debug(`dy: ${dy}`);\r\n\r\n            const top = state.viewport.slotOriginTop;\r\n            debug(`top: ${top}`);\r\n\r\n            const sum = -dy + top;\r\n            debug(`sum: ${sum}`);\r\n\r\n            Object.assign(state, { offsetY: sum });\r\n            state.viewport.update(this.getViewportProps(state));\r\n        } else {\r\n            Object.assign(props, { paginator: undefined });\r\n        }\r\n\r\n        Object.assign(state.props, props);\r\n\r\n        return state;\r\n    }\r\n\r\n    public unmounting(state: Readonly<IVirtualizedViewState>) {\r\n        state.docView.unmount();\r\n\r\n        if (state.virtualized) {\r\n            state.viewport.unmount();\r\n        }\r\n    }\r\n\r\n    private readonly onScroll = (value: number) => {\r\n        this.state.paginator.startPosition = Math.floor(value);\r\n        this.update(this.state.props);\r\n    }\r\n\r\n    private ensureVirtualizationMode(props: Readonly<IVirtualizedProps>, state: Readonly<IVirtualizedViewState>, isMounting: boolean) {\r\n        if (props.virtualize !== state.virtualized) {\r\n            const docRoot = state.docView.root;\r\n            docRoot.remove();\r\n\r\n            if (props.virtualize) {\r\n                // Assign our cached paginator to our props, which are passed through to\r\n                // the FlowEditor component.\r\n                Object.assign(props, { paginator: state.paginator });\r\n\r\n                state.root.appendChild(\r\n                    state.viewport.mount(\r\n                        this.getViewportProps(state)));\r\n            } else {\r\n                Object.assign(props, { paginator: undefined });\r\n\r\n                if (!isMounting) {\r\n                    state.viewport.unmount();\r\n                }\r\n\r\n                state.root.appendChild(docRoot);\r\n            }\r\n\r\n            Object.assign(state, { virtualized: props.virtualize });\r\n        }\r\n    }\r\n\r\n    private getViewportProps(state: Readonly<IVirtualizedViewState>): IViewportProps {\r\n        return {\r\n            slot: state.docView.root,\r\n            onScroll: this.onScroll,\r\n            sizeY: 8192,\r\n            offsetY: state.offsetY,\r\n        };\r\n    }\r\n}\r\n"]}