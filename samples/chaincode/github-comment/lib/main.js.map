{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.tsx"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Import Fluid Framework \"goo\":\nimport {\n  PrimedComponentFactory,\n} from \"@prague/aqueduct\";\n import {\n  IComponentHTMLVisual,\n  IComponentHandle,\n  IComponentHTMLRender,\n} from \"@prague/component-core-interfaces\";\nimport {\n  IComponentContext,\n  IComponentRuntime,\n} from \"@prague/runtime-definitions\";\nimport {\n  SharedString,\n} from \"@prague/sequence\";\n\n// Import parent textarea component:\nimport {\n  TextareaNoReact\n} from \"@chaincode/textarea-noreact\";\n\n// Import HTML/CSS/Markdown-it:\nimport * as tabSelector from \"./utils/github-missing-js\";\nimport \"./styles/github-css-full-rip.css\";\nconst divHTML = require(\"./styles/github-comment-only.html\");\nconst mdit = require('markdown-it')('commonmark');\n\nexport class GithubComment\n             extends TextareaNoReact                \n             implements IComponentHTMLVisual, IComponentHTMLRender {\n  public get IComponentHTMLVisual() { return this; }\n  public get IComponentHTMLRender() { return this; }\n\n  /**\n   * Extension of the parent class function that also forces the innerHTML of\n   * the markdown pane to update based on `nT`.\n   */\n  protected async forceDOMUpdate(nT, nSS?, nSE?) {\n    super.forceDOMUpdate(nT, nSS, nSE);\n\n    const textMarkdownRender = mdit.render(nT) as string;\n    const mdDiv =\n      document.getElementById(\"markdown-pane-div\") as HTMLDivElement;\n    mdDiv.innerHTML = textMarkdownRender;\n  }\n\n  /**\n   * Draw the HTML view of the element. Invoked by the runtime every time the\n   * page is loaded/refreshed.\n   * \n   * In our case, loads the form HTML from an external HTML snippet and then\n   * attaches handlers to the core textarea of the comment form.\n   * \n   * @param div HTMLDivElement provided by runtime for component to be loaded in\n   */\n  public async render(div: HTMLElement) {\n    this.textareaID = \"new_comment_field\";\n\n    // Register handlers:\n    this.handleIncomingChange = this.handleIncomingChange.bind(this);\n    this.handleOutgoingChange = this.handleOutgoingChange.bind(this);\n    this.createComponentDom = this.createComponentDom.bind(this);\n    this.updateSelection = this.updateSelection.bind(this);\n    this.forceDOMUpdate = this.forceDOMUpdate.bind(this);\n\n    // Update textareaState and register listener:\n    const textareaString = \n    await this.root.get<IComponentHandle>(this.textareaRootKey)\n                   .get<SharedString>();\n    this.textareaState.text = textareaString.getText();\n    textareaString.on(\"sequenceDelta\", this.handleIncomingChange);\n\n    // Create the component's DOM and add event handlers to textarea:\n    div.innerHTML = divHTML;\n    const textareaElement =\n      document.getElementById(this.textareaID) as HTMLTextAreaElement;\n    textareaElement.value = this.textareaState.text;\n    textareaElement.oninput = this.handleOutgoingChange;\n    textareaElement.selectionStart = this.textareaState.selectionStart;\n    textareaElement.selectionEnd = this.textareaState.selectionEnd;\n    textareaElement.onclick = this.updateSelection;\n    textareaElement.onkeydown = this.updateSelection;\n\n    // Add the missing tab logic back to the tab-container for proper toggling:\n    const tabContainer =\n      document.getElementById(\"top-level-tab-container\") as HTMLElement;\n    tabContainer.onclick = tabSelector.tabHandler;\n\n    // Called here to initialize innerHTML of markdown pane on pageload/refresh:\n    this.forceDOMUpdate(this.textareaState.text);\n  }\n\n  /**\n   * Final (static!) load function that allows the runtime to make async calls\n   * while creating the object.\n   *\n   * Primarily boilerplate code.\n   */\n  public static async load(runtime: IComponentRuntime,\n                           context: IComponentContext): Promise<GithubComment> {\n    const fluidComponent =\n      new GithubComment(runtime, context);\n    await fluidComponent.initialize();\n\n    return fluidComponent;\n  }\n\n} // end GithubComment class\n\n/**\n * Note: even though we're extending TextareaNoReact, note that this is a\n * single-line export outside of the class -- we can't even override the\n * equivalent for TextareaNoReact (via importing) and so we have to rewrite\n * essentially the same lines.\n */\nexport const GithubCommentInstantiationFactory =\n  new PrimedComponentFactory(\n    GithubComment,\n    [\n      SharedString.getFactory(),\n    ],\n);\n"]}