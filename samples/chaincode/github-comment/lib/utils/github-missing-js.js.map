{"version":3,"file":"github-missing-js.js","sourceRoot":"","sources":["../../src/utils/github-missing-js.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;GAIG;AAEH,MAAM,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC;IACnB,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,CAAC;IAC9D,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;IAClD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEf,4CAA4C;IAC5C,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,sBAAsB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;QAC3H,iDAAiD;QACjD,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;YACf,CAAC,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;YACzC,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACpC;QACD,iDAAiD;QACjD,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;YACf,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;YACxC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAC9B,CAAC,CAAC,KAAK,EAAE,CAAC;YACV,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,uBAAuB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAC5G;KACJ;AACL,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,CAAC;IACxB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,CAAC,CAAC;IACjF,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,YAAY,OAAO,CAAC,EAAE;QAChC,OAAO;KACV;IACD,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC3C,iDAAiD;IACjD,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Functions that have been taken from other files in the sources of\n * Github-served pages that provide additional functionality not present in the\n * HTML or CSS files.\n */\n\nexport function xn(e, t) {\n    const n = e.querySelectorAll('[role=\"tablist\"] [role=\"tab\"]');\n    const s = e.querySelectorAll('[role=\"tabpanel\"]');\n    const o = n[t];\n    const r = s[t];\n\n    // tslint:disable-next-line: max-line-length\n    if (!!e.dispatchEvent(new CustomEvent(\"tab-container-change\", { bubbles: !0, cancelable: !0, detail: { relatedTarget: r } }))) {\n        // tslint:disable-next-line: no-shadowed-variable\n        for (const e of n) {\n            e.setAttribute(\"aria-selected\", \"false\");\n            e.setAttribute(\"tabindex\", \"-1\");\n        }\n        // tslint:disable-next-line: no-shadowed-variable\n        for (const e of s) {\n            e.hidden = !0;\n            e.setAttribute(\"tabindex\", \"0\");\n            o.setAttribute(\"aria-selected\", \"true\");\n            o.removeAttribute(\"tabindex\");\n            o.focus();\n            r.hidden = !1;\n            e.dispatchEvent(new CustomEvent(\"tab-container-changed\", { bubbles: !0, detail: { relatedTarget: r } }));\n        }\n    }\n}\n\nexport function tabHandler(e) {\n    const t = Array.from(document.querySelectorAll('[role=\"tablist\"] [role=\"tab\"]'));\n    if (!(e.target instanceof Element)) {\n        return;\n    }\n    const n = e.target.closest('[role=\"tab\"]');\n    // tslint:disable-next-line: no-unused-expression\n    n && n.closest('[role=\"tablist\"]') && xn(document, t.indexOf(n));\n}\n"]}