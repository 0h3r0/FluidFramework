apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "routerlicious.fullname" . }}
  labels:
    app: {{ template "routerlicious.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Values.name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.json: |
    {
        "logger": {
            "colorize": false,
            "morganFormat": "short",
            "json": true,
            "level": "verbose",
            "timestamp": false,
            "label": "winston"
        },
        "mongo": {
            "endpoint": "{{ .Values.mongodb.url }}",
            "collectionNames": {
                "deltas": "deltas",
                "documents": "documents",
                "partitions": "partitions",
                "tenants": "tenants"
            }
        },
        "kafka": {
            "lib": {
                "name": "kafka-node",
                "endpoint": "{{ .Values.zookeeper.url }}"
            }
        },
        "alfred": {
            "kafkaClientId": "{{ template "alfred.fullname" . }}",
            "topic": "{{ .Values.kafka.topics.rawdeltas }}",
            "bucket": "snapshots",
            "restJsonSize": "50mb"
        },
        "deli": {
            "topics": {
                "receive": "{{ .Values.kafka.topics.rawdeltas }}",
                "send": "{{ .Values.kafka.topics.deltas }}"
            },
            "kafkaClientId": "{{ template "deli.fullname" . }}",
            "groupId": "{{ template "deli.fullname" . }}",
            "checkpointBatchSize": 10,
            "checkpointTimeIntervalMsec": 1000
        },
        "system": {
            "topics": {
                "send": "{{ .Values.kafka.topics.deltas }}"
            }
        },
        "auth": {
            "endpoint": "http://{{ template "riddler.fullname" . }}"
        },
        "routemaster": {
            "topics": {
                "receive": "{{ .Values.kafka.topics.deltas }}",
                "send": "{{ .Values.kafka.topics.rawdeltas }}"
            },
            "clientId": "{{ template "routemaster.fullname" . }}",
            "groupId": "{{ template "routemaster.fullname" . }}",
            "checkpointBatchSize": 10,
            "checkpointTimeIntervalMsec": 1000
        },
        "lambdas": {
            "deli": {
                "group": "{{ template "deli.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.rawdeltas }}"
            },
            "routemaster": {
                "group": "{{ template "routemaster.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.deltas }}"
            },
            "scriptorium": {
                "group": "{{ template "scriptorium.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.deltas }}"
            },
            "tmz": {
                "group": "{{ template "tmz.fullname" . }}",
                "topic": "{{ .Values.kafka.topics.deltas }}"
            }
        },
        "paparazzi": {
            "queue": "snapshot",
            "bucket": "snapshots",
            "alfred": "http://{{ template "alfred.fullname" . }}",
            "tmz": "http://{{ template "tmz.fullname" . }}"
        },
        "scriptorium": {
            "topic": "{{ .Values.kafka.topics.deltas }}",
            "kafkaClientId": "{{ template "scriptorium.fullname" . }}",
            "groupId": "{{ template "scriptorium.fullname" . }}",
            "checkpointBatchSize": 1,
            "checkpointTimeIntervalMsec": 1000
        },
        "tmz": {
            "alfred": "http://{{ template "alfred.fullname" . }}",
            "queue": "snapshot",
            "topic": "{{ .Values.kafka.topics.deltas }}",
            "kafkaClientId": "{{ template "tmz.fullname" . }}",
            "groupId": "{{ template "tmz.fullname" . }}",
            "port": 4000,
            "timeoutMSec": {
                "checker": 10000,
                "worker": 10000,
                "document": 600000
            },
            "tasks": {
                "spell": "server",
                "intel": "server",
                "snapshot": "both",
                "translation": "server"
            },
            "workerType": "random",
            "workerAckTimeMSec": 250,
            "onlyServer": false
        },
        "riddler": {
            "port": 5000,
            "key": "symmetric_key"
        },
        "redis": {
            "host": "{{ .Values.redis.url }}",
            "port": 6379
        },
        "worker": {
            "intelligence": {
                "resume": {
                    "deviceId": "routerlicious",
                    "host": "pkarimov-paidIOT.azure-devices.net",
                    "sharedAccessKeyName": "iothubowner",
                    "sharedAccessKey": "8mvOmNnUklwnuzY+U96V51w+qCq262ZUpSkdw8nTZ18=",
                    "url": "{{ .Values.alfred.externalUrl }}/intelligence/resume"
                },
                "textAnalytics": {
                    "key": "c8b60dc5e49849ce903d7d29a2dce550"
                },
                "nativeTextAnalytics": {
                    "enable": false,
                    "url": "http://praguepy.westus2.cloudapp.azure.com/"
                },
                "spellchecker": {
                    "url": "https://augmentation.wu2.prague.office-int.com/spellchecker/api"
                }
            },
            "alfredUrl": "http://{{ template "alfred.fullname" . }}",
            "serverUrl": "{{ .Values.alfred.externalUrl }}",
            "url": "{{ .Values.tmz.externalUrl }}",
            "blobStorageUrl": "{{ .Values.historian.externalUrl }}",
            "scriptUrl": "{{ .Values.minio.externalUrl }}/agents/",
            "repository": "prague",
            "storageBucket": "snapshots",
            "intervalMSec": 5000,
            "onlyServer": false,
            "permission": {
                "paparazzi": ["snapshot", "spell", "intel", "translation"],
                "canvas": ["ping"],
                "cell": ["ping", "snapshot"],
                "maps": ["ping", "snapshot"],
                "sharedText": ["ping"]
            }
        },
        "tenantConfig": [
            {
                "_id": "git",
                "key": "43cfc3fbf04a97c0921fd23ff10f9e4b",
                "storage": {
                    "url": "{{ .Values.gitrest.url }}",
                    "owner": "prague",
                    "repository": "prague"
                },
                "isDefault": true
            },
            {
                "_id": "prague",
                "key": "43cfc3fbf04a97c0921fd23ff10f9e4b",
                "storage": {
                    "url": "{{ .Values.gitrest.url }}",
                    "owner": "prague",
                    "repository": "prague"
                }
            },
            {
                "_id": "github",
                "key": "0bea3f87c186991a69245a29dc3f61d2",
                "storage": {
                    "url": "https://api.github.com",
                    "owner": "kurtb",
                    "repository": "praguedocs",
                    "direct": "https://api.github.com",
                    "credentials": {
                        "user": "praguegit",
                        "password": "8d043006d0a2704d4dd9972f848f1982026672a1"
                    }
                }
            },
            {
                "_id": "cobalt",
                "key": "0e3c439e9ba63d85936c7e7e9c79478c",
                "storage": {
                    "url": "{{ .Values.cobalt.url }}",
                    "owner": "prague",
                    "repository": "prague"
                }
            }
        ],
        "metric": {
            "client": "telegraf",
            "telegraf": {
                "host": "polling-telegraf-service.metric",
                "port": 8094
            }
        },
        "minio": {
            "endpoint": "{{ .Values.minio.endpoint }}",
            "port": 9000,
            "accessKey": "prague",
            "secretKey": "mhioAkNXTwdX4dXWgKgXVtHo",
            "bucket": "agents"
        }
    }