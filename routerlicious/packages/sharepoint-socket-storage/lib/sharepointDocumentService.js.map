{"version":3,"file":"sharepointDocumentService.js","sourceRoot":"","sources":["../src/sharepointDocumentService.ts"],"names":[],"mappings":";;;;;;;;AACA,OAAO,EAAE,uBAAuB,EAAE,MAAM,+BAA+B,CAAC;AACxE,OAAO,EAAE,2BAA2B,EAAE,6BAA6B,EAAE,MAAM,uBAAuB,CAAC;AACnG,OAAO,EAAE,4BAA4B,EAAE,MAAM,oCAAoC,CAAC;AAElF,MAAM,OAAO,yBAAyB;IAClC,YACY,WAAmB,EACnB,YAAoB,EACpB,YAAoB;QAFpB,gBAAW,GAAX,WAAW,CAAQ;QACnB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,iBAAY,GAAZ,YAAY,CAAQ;QAC5B,iFAAiF;QACjF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAClC,CAAC;IAEY,gBAAgB,CACzB,QAAgB,EAChB,EAAU,EACV,KAAa;;YACb,0FAA0F;YAC1F,2DAA2D;YAC3D,OAAO,IAAI,4BAA4B,EAAE,CAAC;QAC9C,CAAC;KAAA;IAEY,qBAAqB,CAC9B,QAAgB,EAChB,EAAU,EACV,KAAa;;YACb,MAAM,YAAY,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC1E,OAAO,IAAI,2BAA2B,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;QAC9E,CAAC;KAAA;IAEY,oBAAoB,CAC7B,QAAgB,EAChB,EAAU,EACV,KAAa,EACb,MAAmB;;YAEnB,OAAO,uBAAuB,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9F,CAAC;KAAA;IAEY,MAAM,CAAC,QAAgB,EAAE,EAAU,EAAE,KAAa;;YAC3D,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEM,uBAAuB;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ","sourcesContent":["import * as api from \"@prague/runtime-definitions\";\nimport { DocumentDeltaConnection } from \"@prague/socket-storage-shared\";\nimport { DocumentDeltaStorageService, SharepointDeltaStorageService } from \"./deltaStorageService\";\nimport { ReplayDocumentStorageService } from \"./sharepointDocumentStorageService\";\n\nexport class SharepointDocumentService implements api.IDocumentService {\n    constructor(\n        private snapshotUrl: string,\n        private deltaFeedUrl: string,\n        private webSocketUrl: string) {\n        // For now just log the snapshot url until sharepoint starts supporting snapshots\n        console.log(this.snapshotUrl);\n    }\n\n    public async connectToStorage(\n        tenantId: string,\n        id: string,\n        token: string): Promise<api.IDocumentStorageService> {\n        // Use the replaydocumentstorage service to return the default values for snapshot methods\n        // Replace this once sharepoint starts supporting snapshots\n        return new ReplayDocumentStorageService();\n    }\n\n    public async connectToDeltaStorage(\n        tenantId: string,\n        id: string,\n        token: string): Promise<api.IDocumentDeltaStorageService> {\n        const deltaStorage = new SharepointDeltaStorageService(this.deltaFeedUrl);\n        return new DocumentDeltaStorageService(tenantId, id, token, deltaStorage);\n    }\n\n    public async connectToDeltaStream(\n        tenantId: string,\n        id: string,\n        token: string,\n        client: api.IClient): Promise<api.IDocumentDeltaConnection> {\n\n        return DocumentDeltaConnection.Create(tenantId, id, token, io, client, this.webSocketUrl);\n    }\n\n    public async branch(tenantId: string, id: string, token: string): Promise<string> {\n        return null;\n    }\n\n    public getErrorTrackingService() {\n        return null;\n    }\n}\n"]}