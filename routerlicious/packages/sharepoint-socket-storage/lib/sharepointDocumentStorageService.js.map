{"version":3,"file":"sharepointDocumentStorageService.js","sourceRoot":"","sources":["../src/sharepointDocumentStorageService.ts"],"names":[],"mappings":";;;;;;;;AAGA;;;GAGG;AACH,MAAM,OAAO,4BAA4B;IAE9B,eAAe,CAAC,OAA0B;QAC7C,OAAO,IAAI,CAAC;IAChB,CAAC;IAEY,WAAW,CAAC,GAAW,EAAE,KAAa;;YAChD,OAAO,EAAE,CAAC;QACb,CAAC;KAAA;IAEY,IAAI,CAAC,GAAW;;YACzB,OAAO,EAAE,CAAC;QACd,CAAC;KAAA;IAEY,UAAU,CAAC,OAA0B,EAAE,IAAY;;YAC5D,OAAO,EAAE,CAAC;QACd,CAAC;KAAA;IAEM,KAAK,CAAC,IAAe,EAAE,OAAiB,EAAE,OAAe;QAC5D,OAAO,IAAI,CAAC;IAChB,CAAC;IAEY,UAAU,CAAC,IAAY;;YAChC,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEM,SAAS,CAAC,GAAW;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ","sourcesContent":["import * as resources from \"@prague/gitresources\";\nimport * as api from \"@prague/runtime-definitions\";\n\n/**\n * Document storage service for sharepoint...For now, this is just a placeholder\n * It just does a default implememtation for all the methods\n */\nexport class ReplayDocumentStorageService implements api.IDocumentStorageService  {\n\n    public getSnapshotTree(version: resources.ICommit): Promise<api.ISnapshotTree> {\n        return null;\n    }\n\n    public async getVersions(sha: string, count: number): Promise<resources.ICommit[]> {\n       return [];\n    }\n\n    public async read(sha: string): Promise<string> {\n        return \"\";\n    }\n\n    public async getContent(version: resources.ICommit, path: string): Promise<string> {\n        return \"\";\n    }\n\n    public write(tree: api.ITree, parents: string[], message: string): Promise<resources.ICommit> {\n        return null;\n    }\n\n    public async createBlob(file: Buffer): Promise<resources.ICreateBlobResponse> {\n        return null;\n    }\n\n    public getRawUrl(sha: string): string {\n        return null;\n    }\n}\n"]}