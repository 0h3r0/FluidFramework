{
  "name": "root",
  "private": true,
  "scripts": {
    "build": "lerna run build --stream",
    "build:full": "lerna run build:full --stream",
    "clean": "lerna run clean --stream --parallel",
    "docker-restart": "docker-compose restart alfred && docker-compose restart deli && docker-compose restart scriptorium && docker-compose restart tmz && docker-compose restart paparazzi",
    "postinstall": "(npm run registryAuth || true) && lerna bootstrap",
    "registryAuth": "docker login -u prague -p /vM3i=D+K4+vj+pgha=cg=55OQLDWj3w prague.azurecr.io",
    "start": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "start:standalone": "docker-compose -f docker-compose.standalone.yml up",
    "start:rdkafka": "docker-compose -f docker-compose.rdkafka.yml -f docker-compose.dev.yml up",
    "start:debug": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.debug.yml up",
    "stop": "docker-compose down",
    "stop:full": "docker-compose down && docker volume prune --force",
    "test": "lerna run test --stream",
    "test:coverage": "lerna run test:coverage --stream",
    "test:copyresults": "copyfiles 'packages/*/nyc/**' nyc",
    "test:full": "npm run test:coverage;t1=$?;npm run test:copyresults; exit $t1",
    "tsc": "lerna run tsc --stream",
    "tslint": "lerna run tslint --stream",
    "watch": "concurrently \"npm run watch:tsc\" \"npm run watch:esnext\" \"npm run watch:webpack\"",
    "watch:esnext": "lerna run --parallel build:esnext -- -- --watch",
    "watch:tsc": "lerna run --parallel tsc -- -- --watch",
    "watch:webpack": "lerna run --parallel webpack -- -- --watch"
  },
  "devDependencies": {
    "concurrently": "^4.0.1",
    "copyfiles": "^2.1.0",
    "lerna": "^3.1.4"
  }
}
