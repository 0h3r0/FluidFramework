{
  "name": "@prague/routerlicious",
  "version": "0.1.0",
  "description": "Server to assign sequence numbers and route deltas between connected clients",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "webpack": "webpack --config webpack.dev.js --mode development",
    "webpack:common": "webpack --config webpack.common.js --mode development",
    "webpack:min": "webpack --config webpack.prod.js --mode production",
    "babel": "babel public/scripts/dist -d public/scripts/es5",
    "browserify:all:min": "concurrently \"npm run browserify:api:min\" \"npm run browserify:ui:min\" \"npm run browserify:controllers:min\" \"npm run browserify:agent:min\"",
    "browserify:controllers:min": "browserify src/alfred/controllers/index.ts --debug -s controller -p [ tsify ] | uglifyjs --source-map content=inline,url=controller.min.js.map -o public/scripts/dist/controllers.min.js",
    "browserify:api:min": "browserify src/client-api/index.ts --debug -s prague_api -p [ tsify ] | uglifyjs --source-map content=inline,url=api.min.js.map -o public/scripts/dist/api.min.js",
    "browserify:ui:min": "browserify src/client-ui/index.ts --debug -s prague_ui -p [ tsify ] | uglifyjs --source-map content=inline,url=ui.min.js.map -o public/scripts/dist/ui.min.js",
    "browserify:agent:min": "browserify src/agent/index.ts --debug -s prague_agent -p [ tsify ] | uglifyjs --source-map content=inline,url=agent.min.js.map -o public/scripts/dist/agent.min.js",
    "build": "concurrently \"npm run tslint\" \"npm run tsc\" \"npm run less\" \"npm run webpack\"",
    "build:dts": "dts-bundle --main dist/client-api/index.d.ts --name prague --baseDir ./dist --out ../public/scripts/dist/prague.d.ts",
    "build:full": "concurrently \"npm run build\" \"npm run webpack:min\"",
    "build:watch": "watch 'npm run tsc && npm run webpack' src",
    "less": "lessc src/stylesheets/style.less public/stylesheets/dist/style.css",
    "alfred": "node dist/alfred/www.js",
    "alfred:debug": "node --inspect=0.0.0.0:5858 dist/alfred/www.js",
    "alfred:watch": "nodemon --exitcrash dist/alfred/www.js -w dist",
    "deli": "node dist/deli/index.js",
    "deli:debug": "node --inspect=0.0.0.0:5858 dist/deli/index.js",
    "deli:watch": "nodemon --exitcrash dist/deli/index.js -w dist",
    "docker-run": "docker run --rm -v $(pwd):/usr/src/server -w /usr/src/server node:8.11.1-alpine",
    "paparazzi": "node dist/paparazzi/index.js",
    "paparazzi:debug": "node --inspect=0.0.0.0:5858 dist/paparazzi/index.js",
    "paparazzi:watch": "nodemon --exitcrash dist/paparazzi/index.js -w dist",
    "registryAuth": "docker login -u prague -p /vM3i=D+K4+vj+pgha=cg=55OQLDWj3w prague.azurecr.io",
    "scriptorium": "node dist/scriptorium/index.js",
    "scriptorium:debug": "node --inspect=0.0.0.0:5858 dist/scriptorium/index.js",
    "scriptorium:watch": "nodemon --exitcrash dist/scriptorium/index.js -w dist",
    "tmz": "node dist/tmz/index.js",
    "tmz:debug": "node --inspect=0.0.0.0:5858 dist/tmz/index.js",
    "tmz:watch": "nodemon --exitcrash dist/tmz/index.js -w dist",
    "docker-restart": "docker-compose restart alfred && docker-compose restart deli && docker-compose restart scriptorium && docker-compose restart tmz && docker-compose restart paparazzi",
    "start": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "start:debug": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.debug.yml up",
    "test": "mocha --recursive dist/test",
    "test:coverage": "nyc npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=nyc/junit-report.xml",
    "tsc": "tsc",
    "tslint": "tslint 'src/**/*.ts'",
    "stop": "docker-compose down",
    "stop:full": "docker-compose down && docker volume prune --force",
    "beast": "npm test -- --beast --grep beastTest",
    "perf:deli:debug": "nodemon --exitcrash --inspect=0.0.0.0:5858 dist/perf/deli.js -w dist",
    "pretest:perf:deli": "docker-compose -f docker-compose.test.deli.yml down --remove-orphans",
    "test:perf:deli": "npm run pretest:perf:deli; docker-compose -f docker-compose.test.deli.yml up",
    "perf:scriptorium:debug": "nodemon --exitcrash --inspect=0.0.0.0:5858 dist/perf/scriptorium.js -w dist",
    "pretest:perf:scriptorium": "docker-compose -f docker-compose.test.scriptorium.yml down --remove-orphans",
    "postinstall": "npm run registryAuth",
    "test:perf:scriptorium": "npm run pretest:perf:scriptorium; docker-compose -f docker-compose.test.scriptorium.yml up",
    "perf:alfred:debug": "nodemon --exitcrash --inspect=0.0.0.0:5858 dist/perf/alfred.js -w dist",
    "pretest:perf:alfred": "docker-compose -f docker-compose.test.alfred.yml down --remove-orphans",
    "test:perf:alfred": "npm run pretest:perf:alfred; docker-compose -f docker-compose.test.alfred.yml up",
    "perf:client:debug": "nodemon --exitcrash --inspect=0.0.0.0:5858 dist/perf/client.js -w dist",
    "pretest:perf:client": "docker-compose -f docker-compose.test.client.yml down --remove-orphans",
    "test:perf:client": "npm run pretest:perf:client; docker-compose -f docker-compose.test.client.yml up",
    "perf:kafka:producer:debug": "nodemon --exitcrash --inspect=0.0.0.0:5858 dist/perf/kafkaproducer.js -w dist",
    "perf:kafka:consumer:debug": "nodemon --exitcrash --inspect=0.0.0.0:5859 dist/perf/kafkaconsumer.js -w dist",
    "perf:kafka:debug": "concurrently \"npm run perf:kafka:producer:debug\" \"npm run perf:kafka:consumer:debug\"",
    "pretest:perf:kafka": "docker-compose -f docker-compose.test.kafka.yml down --remove-orphans",
    "test:perf:kafka": "npm run pretest:perf:kafka; docker-compose -f docker-compose.test.kafka.yml up",
    "test:ml:debug": "nodemon --exitcrash --inspect=0.0.0.0:5858 dist/perf/mltest.js -w dist"
  },
  "author": "Microsoft",
  "repository": "microsoft/prague",
  "devDependencies": {
    "@types/amqplib": "^0.5.7",
    "@types/async": "^2.0.49",
    "@types/commander": "^2.12.2",
    "@types/compression": "0.0.33",
    "@types/debug": "0.0.29",
    "@types/diff": "^3.5.1",
    "@types/jquery": "^2.0.49",
    "@types/jsdom": "^11.0.2",
    "@types/jsonwebtoken": "^7.2.6",
    "@types/kafka-node": "^2.0.6",
    "@types/lodash": "^4.14.108",
    "@types/minimist": "^1.2.0",
    "@types/mkdirp": "^0.3.29",
    "@types/mocha": "^2.2.48",
    "@types/mongodb": "^2.2.20",
    "@types/morgan": "^1.7.32",
    "@types/mqtt": "0.0.34",
    "@types/nconf": "0.0.34",
    "@types/passport": "^0.3.3",
    "@types/progress": "^2.0.1",
    "@types/random-js": "^1.0.28",
    "@types/redis": "^2.8.6",
    "@types/request": "^2.47.0",
    "@types/request-promise-native": "^1.0.14",
    "@types/rimraf": "^2.0.2",
    "@types/serve-favicon": "^2.2.28",
    "@types/socket.io": "^1.4.33",
    "@types/socket.io-client": "^1.4.31",
    "@types/socket.io-redis": "^1.0.25",
    "@types/split": "^0.3.28",
    "@types/string-hash": "^1.1.1",
    "@types/supertest": "^2.0.3",
    "@types/url-parse": "^1.1.0",
    "@types/uuid": "^3.4.3",
    "@types/webcola": "^3.2.0",
    "@types/winston": "^2.3.9",
    "@types/ws": "^3.2.1",
    "@types/xmldoc": "^1.1.2",
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "browserify": "^14.1.0",
    "browserify-shim": "^3.8.13",
    "concurrently": "^3.4.0",
    "dts-bundle": "^0.7.3",
    "exorcist": "^0.4.0",
    "jsdom": "^11.9.0",
    "kafka-rest": "0.0.5",
    "less": "^2.7.2",
    "minimist": "^1.2.0",
    "mocha": "^3.2.0",
    "mocha-junit-reporter": "^1.17.0",
    "nodemon": "^1.17.3",
    "nyc": "^11.7.1",
    "speed-measure-webpack-plugin": "^1.2.2",
    "string-hash": "^1.1.3",
    "supertest": "^3.0.0",
    "ts-loader": "^4.3.0",
    "tsify": "^3.0.4",
    "tslint": "^4.5.1",
    "typescript": "^2.8.3",
    "uglify-es": "^3.3.9",
    "uglifyjs-webpack-plugin": "^1.2.5",
    "webpack-cli": "^2.1.3",
    "webpack-merge": "^4.1.2"
  },
  "dependencies": {
    "@types/d3": "^4.13.0",
    "@types/xml2js": "^0.4.2",
    "amqp10": "^3.6.0",
    "amqplib": "^0.5.1",
    "async": "^2.6.0",
    "azure-event-hubs": "0.0.7",
    "azure-iot-device": "1.2.2",
    "azure-iot-device-mqtt": "1.2.3",
    "azure-iothub": "1.2.1",
    "azure-sb": "^0.10.6",
    "azure-storage": "^2.8.2",
    "body-parser": "^1.17.1",
    "commander": "^2.15.1",
    "compression": "^1.7.2",
    "cors": "^2.8.4",
    "crypto-js": "^3.1.9-1",
    "d3": "^4.13.0",
    "debug": "^2.6.8",
    "diff": "^3.5.0",
    "es6-promisify": "^5.0.0",
    "express": "^4.16.3",
    "gitgraph.js": "^1.11.4",
    "gitresources": "https://praguenpm.blob.core.windows.net/packages/gitresources-0.7.0.tgz",
    "hjs": "0.0.6",
    "jquery": "^3.3.1",
    "jsonwebtoken": "^8.2.1",
    "kafka-node": "^2.6.1",
    "lodash": "^4.17.10",
    "minio": "^3.2.3",
    "mkdirp": "^0.5.1",
    "mongodb": "^2.2.35",
    "moniker": "^0.1.2",
    "morgan": "^1.8.1",
    "nconf": "^0.8.4",
    "openpgp": "^2.6.2",
    "passport": "^0.3.2",
    "performance-now": "^2.1.0",
    "progress": "^2.0.0",
    "random-js": "^1.0.8",
    "redis": "^2.7.1",
    "request": "^2.85.0",
    "request-promise-native": "^1.0.5",
    "rimraf": "^2.6.2",
    "serve-favicon": "^2.5.0",
    "shape-detector": "^0.2.1",
    "socket.io": "^2.1.0",
    "socket.io-emitter": "^3.1.1",
    "socket.io-redis": "^5.2.0",
    "split": "^1.0.0",
    "static-expiry": "0.0.11",
    "telegrafjs": "^0.1.3",
    "unzip-stream": "^0.2.3",
    "url-parse": "^1.4.0",
    "uuid": "^3.2.1",
    "webcola": "^3.3.8",
    "webpack": "^4.8.0",
    "winston": "^2.4.2",
    "ws": "^3.3.3",
    "xhr": "^2.4.1",
    "xml2js": "^0.4.19",
    "xmldoc": "^1.1.0"
  },
  "browser": {
    "request": "xhr"
  },
  "browserify": {
    "transform": [
      "browserify-shim"
    ]
  },
  "browserify-shim": {
    "../client-api": "global:prague",
    "../../client-api": "global:prague",
    "../client-ui": "global:pragueUi",
    "../../client-ui": "global:pragueUi",
    "../agent": "global:pragueAgent",
    "../../agent": "global:pragueAgent",
    "jquery": "global:$"
  },
  "nyc": {
    "all": true,
    "exclude": [
      "src/test/**/*.ts",
      "dist/test/**/*.js"
    ],
    "include": [
      "src/**/*.ts",
      "dist/**/*.js"
    ],
    "reporter": [
      "cobertura",
      "html",
      "text"
    ],
    "temp-directory": "nyc/.nyc_output",
    "cache-dir": "nyc/.cache",
    "report-dir": "nyc/report"
  }
}
