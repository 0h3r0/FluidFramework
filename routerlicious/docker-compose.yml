version: '3'
services:
    alfred:
        build: .
        ports:
            - "3000:3000"
        depends_on:
            - redis
            - mongodb
            - kafka-rest
        command: node dist/alfred/www.js
        environment:
            - DEBUG=routerlicious:*
            - NODE_ENV=development
        restart: always
    deli:
        build: .
        depends_on:
            - redis
            - mongodb
            - kafka-rest
        command: node dist/kafka-service/index.js deli ../document-router/index.js
        environment:
            - worker__intelligence__resume__url=http://alfred:3000/intelligence/resume
            - DEBUG=routerlicious:*
            - NODE_ENV=development
            - documentLambda=../deli/index.js
        restart: always
    scriptorium:
        build: .
        depends_on:
            - redis
            - mongodb
            - kafka-rest
        command: node dist/kafka-service/index.js scriptorium ../scriptorium/index.js
        environment:
            - DEBUG=routerlicious:*
            - NODE_ENV=development
        restart: always
    tmz:
        build: .
        ports:
            - "4000:4000"
        depends_on:
            - redis
            - mongodb
            - kafka-rest
        command: node dist/kafka-service/index.js tmz ../tmz/index.js
        environment:
            - DEBUG=routerlicious:*
            - NODE_ENV=development
        restart: always
    routemaster:
        build: .
        command: node dist/kafka-service/index.js routemaster ../document-router/index.js
        environment:
            - DEBUG=routerlicious:*
            - NODE_ENV=development
            - documentLambda=../routemaster/index.js
        restart: always
    paparazzi:
        build: .
        depends_on:
            - alfred
        command: node dist/paparazzi/index.js
        environment:
            - DEBUG=routerlicious:*
            - worker__intelligence__resume__url=http://alfred:3000/intelligence/resume
            - NODE_ENV=development
        restart: always
    riddler:
        build: .
        ports:
            - "5000:5000"
        depends_on:
            - mongodb
        command: node dist/riddler/www.js
        environment:
            - DEBUG=routerlicious:*
            - NODE_ENV=development
        restart: always
    historian:
        image: prague.azurecr.io/historian:1582
        ports:
            - "3001:3000"
        environment:
            - DEBUG=routerlicious:*
            - NODE_ENV=development
        restart: always
    cobalt:
        image: prague.azurecr.io/cobalt:1544
        restart: always
    gitrest:
        image: prague.azurecr.io/gitrest:1316
        environment:
            - DEBUG=routerlicious:*
            - NODE_ENV=development
        volumes:
            - git:/home/node/documents
        restart: always
    git:
        image: prague.azurecr.io/gitssh:654
        ports:
            - "3022:22"
        volumes:
            - git:/home/git
        restart: always
    zookeeper:
        image: wurstmeister/zookeeper:latest
        ports:
            - "2181:2181"
    kafka:
        image: wurstmeister/kafka:latest
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: "kafka"
            KAFKA_ADVERTISED_PORT: "9092"
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
            KAFKA_CREATE_TOPICS: "deltas:8:1,rawdeltas:8:1"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    kafka-rest:
        image: confluentinc/cp-kafka-rest:latest
        depends_on:
            - zookeeper
            - kafka
        ports:
            - "8082:8082"
        logging:
            driver: none
        environment:
            KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_REST_LISTENERS: http://kafka-rest:8082
            KAFKA_REST_HOST_NAME: kafka-rest
            KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 1
    redis:
        image: "redis:alpine"
    mongodb:
        image: "mongo:3.4.3"
    minio:
        image: minio/minio
        ports:
            - "9000:9000"
        environment:
            MINIO_ACCESS_KEY: prague
            MINIO_SECRET_KEY: mhioAkNXTwdX4dXWgKgXVtHo
        command: server /export
volumes:
  git:
    driver: local
