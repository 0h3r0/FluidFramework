{"version":3,"file":"chaincode.js","sourceRoot":"","sources":["../src/chaincode.ts"],"names":[],"mappings":"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","sourcesContent":["// inspiration for this example taken from https://github.com/agentcooper/typescript-play\r\nimport { ComponentHost } from \"@prague/component\";\r\nimport { IPlatform, ITree } from \"@prague/container-definitions\";\r\nimport {\r\n    CounterValueType,\r\n    DistributedSetValueType,\r\n    ISharedMap,\r\n    MapExtension,\r\n    registerDefaultValueType,\r\n} from \"@prague/map\";\r\nimport {\r\n    IMergeTreeGroupMsg,\r\n    IMergeTreeInsertMsg,\r\n    IMergeTreeOp,\r\n    IMergeTreeRemoveMsg,\r\n    MergeTreeDeltaType,\r\n} from \"@prague/merge-tree\";\r\nimport {\r\n    IChaincode,\r\n    IChaincodeComponent,\r\n    IComponentDeltaHandler,\r\n    IComponentRuntime,\r\n    IRuntime as ILegacyRuntime,\r\n} from \"@prague/runtime-definitions\";\r\nimport { SharedString } from \"@prague/sequence\";\r\nimport * as sequence from \"@prague/sequence\";\r\nimport { Deferred } from \"@prague/utils\";\r\nimport * as assert from \"assert\";\r\nimport { EventEmitter } from \"events\";\r\nimport * as monaco from \"monaco-editor\";\r\nimport { Document } from \"./document\";\r\n\r\n// tslint:disable\r\nconst defaultCompilerOptions = {\r\n    noImplicitAny: true,\r\n    strictNullChecks: true,\r\n    strictFunctionTypes: true,\r\n    strictPropertyInitialization: true,\r\n    noImplicitThis: true,\r\n    noImplicitReturns: true,\r\n\r\n    alwaysStrict: true,\r\n    allowUnreachableCode: false,\r\n    allowUnusedLabels: false,\r\n\r\n    downlevelIteration: false,\r\n    noEmitHelpers: false,\r\n    noLib: false,\r\n    noStrictGenericChecks: false,\r\n    noUnusedLocals: false,\r\n    noUnusedParameters: false,\r\n\r\n    esModuleInterop: false,\r\n    preserveConstEnums: false,\r\n    removeComments: false,\r\n    skipLibCheck: false,\r\n\r\n    experimentalDecorators: false,\r\n    emitDecoratorMetadata: false,\r\n\r\n    target: monaco.languages.typescript.ScriptTarget.ES2015,\r\n    jsx: monaco.languages.typescript.JsxEmit.None,\r\n\r\n    allowNonTsExtensions: true,\r\n};\r\n// tslint:enable\r\n\r\nexport class MonacoRunner extends EventEmitter implements IPlatform {\r\n    private mapHost: HTMLElement;\r\n    private codeModel: monaco.editor.ITextModel;\r\n    private codeEditor: monaco.editor.IStandaloneCodeEditor;\r\n    private rootView: ISharedMap;\r\n    private collabDocDeferred = new Deferred<Document>();\r\n\r\n    public async run(runtime: ILegacyRuntime, platform: IPlatform) {\r\n        this.initialize(runtime).then(\r\n            (doc) => this.collabDocDeferred.resolve(doc),\r\n            (error) => this.collabDocDeferred.reject(error));\r\n        return this;\r\n    }\r\n\r\n    public async queryInterface<T>(id: string): Promise<any> {\r\n        return null;\r\n    }\r\n\r\n    public detach() {\r\n        console.log(\"Text detach\");\r\n        return;\r\n    }\r\n\r\n    // TODO can remove ? once document is fixed in main package\r\n    public async attach(platform: IPlatform): Promise<IPlatform> {\r\n        await this.collabDocDeferred.promise;\r\n\r\n        this.mapHost = await platform.queryInterface<HTMLElement>(\"div\");\r\n        if (!this.mapHost) {\r\n            return;\r\n        }\r\n\r\n        const hostDts = await platform.queryInterface<any>(\"dts\");\r\n\r\n        if (!this.mapHost.style.width) {\r\n            this.mapHost.style.width = \"100vw\";\r\n            this.mapHost.style.height = \"100vh\";\r\n        } else {\r\n            this.mapHost.style.width = \"100%\";\r\n            // this.mapHost.style.height = \"100%\";\r\n        }\r\n\r\n        const hostWrapper = document.createElement(\"div\");\r\n        hostWrapper.style.display = \"flex\";\r\n        hostWrapper.style.flex = \"1\";\r\n        hostWrapper.style.width = \"100%\";\r\n        hostWrapper.style.height = \"100%\";\r\n\r\n        const inputDiv = document.createElement(\"div\");\r\n        inputDiv.style.width = \"50%\";\r\n        const outputDiv = document.createElement(\"div\");\r\n        outputDiv.style.width = \"50%\";\r\n\r\n        this.mapHost.appendChild(hostWrapper);\r\n        hostWrapper.appendChild(inputDiv);\r\n        hostWrapper.appendChild(outputDiv);\r\n\r\n        const root = await this.rootView;\r\n        const text = await root.wait<SharedString>(\"text\");\r\n\r\n        monaco.languages.typescript.typescriptDefaults.setCompilerOptions(defaultCompilerOptions);\r\n        if (hostDts) {\r\n            let disposer = monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n                hostDts.getDefinition(),\r\n                \"host.d.ts\");\r\n            hostDts.on(\r\n                \"definitionsChanged\",\r\n                () => {\r\n                    disposer.dispose();\r\n                    disposer = monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n                        hostDts.getDefinition(),\r\n                        \"host.d.ts\");\r\n                });\r\n        }\r\n\r\n        this.codeModel = monaco.editor.createModel(text.getText(), \"typescript\");\r\n        const outputModel = monaco.editor.createModel(\"\", \"javascript\");\r\n\r\n        this.codeEditor = monaco.editor.create(\r\n            inputDiv,\r\n            { model: this.codeModel, automaticLayout: true });\r\n        const outputEditor = monaco.editor.create(\r\n            outputDiv,\r\n            { model: outputModel, automaticLayout: true, readOnly: true });\r\n\r\n        this.codeEditor.addCommand(\r\n            monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter,\r\n            () => { this.runCode(outputModel.getValue(), platform); },\r\n            null);\r\n\r\n        outputEditor.addCommand(\r\n            monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter,\r\n            () => { this.runCode(outputModel.getValue(), platform); },\r\n            null);\r\n\r\n        let ignoreModelContentChanges = false;\r\n        this.codeEditor.onDidChangeModelContent((e) => {\r\n            monaco.languages.typescript.getTypeScriptWorker().then((worker) => {\r\n                worker(this.codeModel.uri.toString()).then((client) => {\r\n                    client.getEmitOutput(this.codeModel.uri.toString()).then((r) => {\r\n                        outputModel.setValue(r.outputFiles[0].text);\r\n                    });\r\n                });\r\n            });\r\n\r\n            if (ignoreModelContentChanges) {\r\n                return;\r\n            }\r\n\r\n            for (const change of e.changes) {\r\n                if (change.text) {\r\n                    if (change.rangeLength === 0) {\r\n                        text.insertText(change.text, change.rangeOffset);\r\n                    } else {\r\n                        text.replaceText(change.rangeOffset, change.rangeOffset + change.rangeLength, change.text);\r\n                    }\r\n                } else {\r\n                    text.removeText(change.rangeOffset, change.rangeOffset + change.rangeLength);\r\n                }\r\n            }\r\n        });\r\n\r\n        text.on(\"op\", (op, local) => {\r\n            if (local) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                ignoreModelContentChanges = true;\r\n                this.mergeDelta(op.contents);\r\n            } finally {\r\n                ignoreModelContentChanges = false;\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    private async initialize(runtime: ILegacyRuntime): Promise<Document> {\r\n        const collabDoc = await Document.Load(runtime);\r\n        this.rootView = await collabDoc.getRoot();\r\n\r\n        if (!runtime.existing) {\r\n            const codeString = collabDoc.createString();\r\n            codeString.insertText('console.log(\"Hello, world!\");', 0);\r\n            this.rootView.set(\"text\", codeString);\r\n        }\r\n\r\n        return collabDoc;\r\n    }\r\n\r\n    private mergeDelta(delta: IMergeTreeOp) {\r\n        switch (delta.type) {\r\n            case MergeTreeDeltaType.GROUP:\r\n                this.mergeDeltaGroup(delta as IMergeTreeGroupMsg);\r\n                break;\r\n            case MergeTreeDeltaType.INSERT:\r\n                this.mergeInsertDelta(delta as IMergeTreeInsertMsg);\r\n                break;\r\n            case MergeTreeDeltaType.REMOVE:\r\n                this.mergeRemoveDelta(delta as IMergeTreeRemoveMsg);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private mergeDeltaGroup(delta: IMergeTreeGroupMsg): void {\r\n        for (const op of delta.ops) {\r\n            this.mergeDelta(op);\r\n        }\r\n    }\r\n\r\n    private mergeInsertDelta(delta: IMergeTreeInsertMsg): void {\r\n        if (typeof delta.pos1 !== \"number\" ||\r\n            typeof delta.seg !== \"string\"\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const range = this.offsetsToRange(delta.pos1, delta.pos2);\r\n        const text = delta.seg || \"\";\r\n        this.codeEditor.executeEdits(\"remote\", [ { range, text } ]);\r\n    }\r\n\r\n    private mergeRemoveDelta(delta: IMergeTreeRemoveMsg): void {\r\n        if (typeof delta.pos1 !== \"number\" ||\r\n            typeof delta.pos2 !== \"number\"\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const range = this.offsetsToRange(delta.pos1, delta.pos2);\r\n        const text = \"\";\r\n        this.codeEditor.executeEdits(\"remote\", [ { range, text } ]);\r\n    }\r\n\r\n    private offsetsToRange(offset1: number, offset2?: number): monaco.Range {\r\n        const pos1 = this.codeModel.getPositionAt(offset1);\r\n        const pos2 = (typeof offset2 === \"number\") ? this.codeModel.getPositionAt(offset2) : pos1;\r\n        const range = new monaco.Range(pos1.lineNumber, pos1.column, pos2.lineNumber, pos2.column);\r\n        return range;\r\n    }\r\n\r\n    private async runCode(code: string, platform: IPlatform) {\r\n        const root = await platform.queryInterface<any>(\"root\");\r\n        const host = root ? root.entry : null;\r\n        this.exec(host, code);\r\n    }\r\n\r\n    private async exec(host: any, code: string) {\r\n        eval(code);\r\n    }\r\n}\r\n\r\nclass Chaincode extends EventEmitter implements IChaincode {\r\n    private modules = new Map<string, any>();\r\n\r\n    /**\r\n     * Constructs a new document from the provided details\r\n     */\r\n    constructor(private runner: any) {\r\n        super();\r\n\r\n        // Register default map value types\r\n        registerDefaultValueType(new DistributedSetValueType());\r\n        registerDefaultValueType(new CounterValueType());\r\n        registerDefaultValueType(new sequence.SharedStringIntervalCollectionValueType());\r\n        registerDefaultValueType(new sequence.SharedIntervalCollectionValueType());\r\n\r\n        // Create channel extensions\r\n        const mapExtension = new MapExtension();\r\n        const sharedStringExtension = new sequence.SharedStringExtension();\r\n        const objectSequenceExtension = new sequence.SharedObjectSequenceExtension();\r\n        const numberSequenceExtension = new sequence.SharedNumberSequenceExtension();\r\n\r\n        this.modules.set(MapExtension.Type, mapExtension);\r\n        this.modules.set(sharedStringExtension.type, sharedStringExtension);\r\n        this.modules.set(objectSequenceExtension.type, objectSequenceExtension);\r\n        this.modules.set(numberSequenceExtension.type, numberSequenceExtension);\r\n    }\r\n\r\n    public getModule(type: string): any {\r\n        assert(this.modules.has(type));\r\n        return this.modules.get(type);\r\n    }\r\n\r\n    /**\r\n     * Stops the instantiated chaincode from running\r\n     */\r\n    public close(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public async run(runtime: ILegacyRuntime, platform: IPlatform): Promise<IPlatform> {\r\n        return this.runner.run(runtime, platform);\r\n    }\r\n}\r\n\r\nexport class MonacoComponent implements IChaincodeComponent {\r\n    private sharedText = new MonacoRunner();\r\n    private chaincode: Chaincode;\r\n    private component: ComponentHost;\r\n\r\n    constructor() {\r\n        this.chaincode = new Chaincode(this.sharedText);\r\n    }\r\n\r\n    public getModule(type: string) {\r\n        return null;\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public async run(runtime: IComponentRuntime): Promise<IComponentDeltaHandler> {\r\n        const chaincode = this.chaincode;\r\n\r\n        const component = await ComponentHost.LoadFromSnapshot(runtime, chaincode);\r\n        this.component = component;\r\n\r\n        return component;\r\n    }\r\n\r\n    public async attach(platform: IPlatform): Promise<IPlatform> {\r\n        return this.sharedText.attach(platform);\r\n    }\r\n\r\n    public snapshot(): ITree {\r\n        const entries = this.component.snapshotInternal();\r\n        return { entries, sha: null };\r\n    }\r\n}\r\n"]}